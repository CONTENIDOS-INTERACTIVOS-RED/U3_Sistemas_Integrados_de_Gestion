{"remainingRequest":"/home/runner/work/U3_Sistemas_Integrados_de_Gestion/U3_Sistemas_Integrados_de_Gestion/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U3_Sistemas_Integrados_de_Gestion/U3_Sistemas_Integrados_de_Gestion/src/views/curso/Tema1.vue?vue&type=template&id=d5412fd6&lang=pug&","dependencies":[{"path":"/home/runner/work/U3_Sistemas_Integrados_de_Gestion/U3_Sistemas_Integrados_de_Gestion/src/views/curso/Tema1.vue","mtime":1743372518517},{"path":"/home/runner/work/U3_Sistemas_Integrados_de_Gestion/U3_Sistemas_Integrados_de_Gestion/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U3_Sistemas_Integrados_de_Gestion/U3_Sistemas_Integrados_de_Gestion/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U3_Sistemas_Integrados_de_Gestion/U3_Sistemas_Integrados_de_Gestion/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U3_Sistemas_Integrados_de_Gestion/U3_Sistemas_Integrados_de_Gestion/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U3_Sistemas_Integrados_de_Gestion/U3_Sistemas_Integrados_de_Gestion/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}